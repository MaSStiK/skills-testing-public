const userCard = JSON.parse(localStorage.antifragile_card)
const userData = JSON.parse(localStorage.antifragile_userData)

// Получаем данные о карточке
if (!userCard.exam_date) {
    // Если нету информации от тестировании 0 перекинет на тест
    window.open("../testing", "_self")
}

$("#card-nickname").text(userCard.nickname) // Никнейм
$("#card-answers").text(userCard.number_correct_answers + "/30") //Количество правильных ответов

// Скорость прохождения теста
let timekeepingSplit = userCard.timekeeping.split(":")
$("#card-time").text(`${timekeepingSplit[1]} мин. ${timekeepingSplit[2]} сек.`);
$("#card-date").text(userCard.exam_date) // Дата прохождения теста

// Мой результат
$("#card-result").text(userCard.grade + "%")
$("#card-result-progressbar").css("width", userCard.grade + "%")

let averageResult = 0
let averageResultSum = 0

ratingData.push({
    nickname: userData.nickname,
    timekeeping: userCard.timekeeping,
    grade: userCard.grade,
})

ratingData.forEach((user, i) => {
    averageResultSum += user.grade
})

averageResult = Math.round(averageResultSum / (100 * ratingData.length) * 100)

// Средний результат участников
$("#card-average-result").text(averageResult + "%")
$("#card-average-result-progressbar").css("width", averageResult + "%")


// Уровень владения навыками
if (userCard.grade > 77) {
    $("#card-level").text("Космический")
    $(".card-data__skill-level").append(`
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <mask id="mask0_28_121" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="24" height="24">
            <rect width="24" height="24" fill="#D9D9D9" />
            </mask>
            <g mask="url(#mask0_28_121)">
            <path d="M10.675 20.75H6.39999C4.68333 20.75 3.21249 20.1625 1.98749 18.9875C0.762494 17.8125 0.149994 16.3667 0.149994 14.65C0.149994 13.2333 0.554161 11.9583 1.36249 10.825C2.17083 9.69167 3.24999 8.93333 4.59999 8.55C5.16666 6.96667 6.12499 5.6875 7.47499 4.7125C8.82499 3.7375 10.3333 3.25 12 3.25C14.0333 3.25 15.7875 3.92917 17.2625 5.2875C18.7375 6.64583 19.5667 8.35833 19.75 10.425C20.95 10.675 21.9333 11.2792 22.7 12.2375C23.4667 13.1958 23.85 14.3 23.85 15.55C23.85 17 23.3458 18.2292 22.3375 19.2375C21.3292 20.2458 20.1 20.75 18.65 20.75H13.325V13.65L14.675 14.9L16.525 13.05L12 8.55L7.49999 13.05L9.34999 14.9L10.675 13.65V20.75Z" fill="#1C1B1F" />
            </g>
        </svg>
    `)
} else if (userCard.grade > 33 && userCard.grade <= 77) {
    $("#card-level").text("Уверенный")
    $(".card-data__skill-level").append(`
        <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
            <mask id="mask0_28_115" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="30" height="30">
            <rect width="30" height="30" fill="#D9D9D9" />
            </mask>
            <g mask="url(#mask0_28_115)">
            <path d="M3.06259 13.2186L8.31259 7.96861C8.60426 7.67695 8.94801 7.46861 9.34384 7.34361C9.73968 7.21861 10.1459 7.19778 10.5626 7.28111L12.1876 7.62486C11.0626 8.9582 10.1772 10.1665 9.53134 11.2499C8.88551 12.3332 8.26051 13.6457 7.65634 15.1874L3.06259 13.2186ZM9.46884 16.0624C9.94801 14.5624 10.5991 13.1457 11.422 11.8124C12.2449 10.479 13.2397 9.22903 14.4063 8.06236C16.2397 6.22903 18.3334 4.85924 20.6876 3.95299C23.0418 3.04674 25.2397 2.7707 27.2813 3.12486C27.6355 5.16653 27.3647 7.36445 26.4688 9.71861C25.573 12.0728 24.2084 14.1665 22.3751 15.9999C21.2293 17.1457 19.9793 18.1405 18.6251 18.9842C17.2709 19.828 15.8438 20.4894 14.3438 20.9686L9.46884 16.0624ZM18.0938 12.3124C18.573 12.7915 19.1616 13.0311 19.8595 13.0311C20.5574 13.0311 21.1459 12.7915 21.6251 12.3124C22.1043 11.8332 22.3438 11.2447 22.3438 10.5467C22.3438 9.84882 22.1043 9.26028 21.6251 8.78111C21.1459 8.30195 20.5574 8.06236 19.8595 8.06236C19.1616 8.06236 18.573 8.30195 18.0938 8.78111C17.6147 9.26028 17.3751 9.84882 17.3751 10.5467C17.3751 11.2447 17.6147 11.8332 18.0938 12.3124ZM17.2188 27.3436L15.2188 22.7499C16.7605 22.1457 18.0782 21.5207 19.172 20.8749C20.2657 20.229 21.4793 19.3436 22.8126 18.2186L23.1251 19.8436C23.2084 20.2603 23.1876 20.6717 23.0626 21.078C22.9376 21.4842 22.7293 21.8332 22.4376 22.1249L17.2188 27.3436ZM5.06259 20.0624C5.79176 19.3332 6.67717 18.9634 7.71884 18.953C8.76051 18.9426 9.64593 19.3019 10.3751 20.0311C11.1043 20.7603 11.4688 21.6457 11.4688 22.6874C11.4688 23.729 11.1043 24.6144 10.3751 25.3436C9.85426 25.8644 8.98447 26.3124 7.76572 26.6874C6.54697 27.0624 4.86467 27.3957 2.71884 27.6874C3.01051 25.5415 3.34384 23.8644 3.71884 22.6561C4.09384 21.4478 4.54176 20.5832 5.06259 20.0624Z" fill="#1C1B1F" />
            </g>
        </svg>
    `)
} else {
    $("#card-level").text("Стартовый")
    $(".card-data__skill-level").append(`
        <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
            <mask id="mask0_28_128" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="30" height="30">
            <rect width="30" height="30" fill="#D9D9D9" />
            </mask>
            <g mask="url(#mask0_28_128)">
            <path d="M5 27.5V20.0938C5 19.6771 5.09896 19.2812 5.29688 18.9063C5.49479 18.5313 5.77083 18.2292 6.125 18L7.5 17.0938C7.64583 18.8438 7.875 20.3333 8.1875 21.5625C8.5 22.7917 8.98958 24.1563 9.65625 25.6563L5 27.5ZM11.5312 25C10.8021 23.625 10.2604 22.1667 9.90625 20.625C9.55208 19.0833 9.375 17.4896 9.375 15.8438C9.375 13.2396 9.89063 10.7865 10.9219 8.48438C11.9531 6.18229 13.3125 4.4375 15 3.25C16.6875 4.4375 18.0469 6.18229 19.0781 8.48438C20.1094 10.7865 20.625 13.2396 20.625 15.8438C20.625 17.4688 20.4479 19.0469 20.0938 20.5781C19.7396 22.1094 19.1979 23.5833 18.4688 25H11.5312ZM15 16.25C15.6875 16.25 16.276 16.0052 16.7656 15.5156C17.2552 15.026 17.5 14.4375 17.5 13.75C17.5 13.0625 17.2552 12.474 16.7656 11.9844C16.276 11.4948 15.6875 11.25 15 11.25C14.3125 11.25 13.724 11.4948 13.2344 11.9844C12.7448 12.474 12.5 13.0625 12.5 13.75C12.5 14.4375 12.7448 15.026 13.2344 15.5156C13.724 16.0052 14.3125 16.25 15 16.25ZM25 27.5L20.3438 25.6563C21.0104 24.1563 21.5 22.7917 21.8125 21.5625C22.125 20.3333 22.3542 18.8438 22.5 17.0938L23.875 18C24.2292 18.2292 24.5052 18.5313 24.7031 18.9063C24.901 19.2812 25 19.6771 25 20.0938V27.5Z" fill="#1C1B1F" />
            </g>
        </svg>
    `)
}

ratingData = ratingData.sort((x, y) => {
    if (x.grade === y.grade) {
        return (x.timekeeping).localeCompare(y.timekeeping)
    }

    return y.grade - x.grade;
})

let myRating = ratingData.findIndex(user => user.nickname === userData.nickname && user.grade === userCard.grade) + 1

$("#card-rating").text(myRating) // Моя позиция в рейтинге
// Если в топ 3 - отображаем карточку
if (myRating > 0 && myRating < 4) {
    $(".card-data__medal").css("display", "flex");
} else { // Иначе удаляем
    $(".card-data__medal").remove()
}

// Отображаем рейтинг
showRating(myRating)